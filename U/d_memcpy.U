?RCS: $Id: d_memcpy.U 1.1 Thu, 20 Jul 2000 17:42:54 -0500 dunemush $
?RCS:
?RCS: Copyright (c) 1991-1993, Raphael Manfredi
?RCS: 
?RCS: You may redistribute only under the terms of the Artistic Licence,
?RCS: as specified in the README file that comes with the distribution.
?RCS: You may reuse parts of this distribution only within the terms of
?RCS: that same Artistic Licence; a copy of which may be found at the root
?RCS: of the source tree for dist 3.0.
?RCS:
?RCS: $Log: d_memcpy.U,v $
?RCS: Revision 3.0.1.1  1993/09/13  16:02:58  ram
?RCS: patch10: removed text recommending bcopy over memcpy (WAD)
?RCS:
?RCS: Revision 3.0  1993/08/18  12:06:34  ram
?RCS: Baseline for dist 3.0 netwide release.
?RCS:
?MAKE:d_memcpy d_memmove: Inlibc
?MAKE:	-pick add $@ %<
?S:d_memcpy:
?S:	This variable conditionally defines the HAS_MEMCPY symbol, which
?S:	indicates to the C program that the memcpy() routine is available
?S:	to copy blocks of memory.
?S:.
?S:d_memmove:
?S:	This variable conditionally defines the HAS_MEMMOVE symbol, which
?S:	indicates to the C program that the memmove() routine is available
?S:	to copy overlapping blocks of memory.
?S:.
?C:HAS_MEMCPY (MEMCPY):
?C:	This symbol, if defined, indicates that the memcpy routine is available
?C:	to copy blocks of memory. If not, it will be mapped to bcopy
?C:	in confmagic.h
?C:.
?C:HAS_MEMMOVE (MEMMOVE):
?C:	This symbol, if defined, indicates that the memmove routine is available
?C:	to copy blocks of memory. If not, it will be mapped to bcopy
?C:.
?H:#$d_memcpy HAS_MEMCPY	/**/
?H:.
?H:#$d_memmove HAS_MEMMOVE	/**/
?H:.
?M:memcpy:HAS_MEMCPY
?M:#ifndef HAS_MEMCPY
?M:#ifndef memcpy
?M:#define memcpy(d,s,l) bcopy((s),(d),(l))
?M:#endif
?M:#endif
?M:.
?M:memmove:HAS_MEMMOVE
?M:#ifndef HAS_MEMMOVE
?M:#ifndef memmove
?M:#define memmove(d,s,l) bcopy((s),(d),(l))
?M:#endif
?M:#endif
?M:.
?LINT:set d_memcpy d_memmove
: see if memcpy exists
set memcpy d_memcpy
eval $inlibc
set memmove d_memmove
eval $inlibc

