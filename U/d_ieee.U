?RCS: $Id: d_ieee.U 1.1 Thu, 20 Jul 2000 17:42:54 -0500 dunemush $
?RCS:
?RCS: Copyright (c) 1995, Alan Schwartz
?RCS: 
?RCS: You may redistribute only under the terms of the Artistic Licence,
?RCS: as specified in the README file that comes with the distribution.
?RCS: You may reuse parts of this distribution only within the terms of
?RCS: that same Artistic Licence; a copy of which may be found at the root
?RCS: of the source tree for dist 3.0.
?RCS:
?MAKE:d_ieee: Myread cat cc ccflags rm ldflags
?MAKE:	-pick add $@ %<
?S:d_ieee:
?S:	Defined if the machine supports IEEE math - that is, can safely
?S:	return NaN or Inf rather than crash on bad math.
?S:.
?C:HAS_IEEE_MATH:
?C:	Defined if the machine supports IEEE math - that is, can safely
?C:	return NaN or Inf rather than crash on bad math.
?C:.
?H:#$d_ieee HAS_IEEE_MATH /**/
?H:.
: check for a safe ieee
echo " "
echo "Let's see if your math functions handle errors nicely..." >&4
$cat >test_ieee.c <<'EOCP'
#include <stdio.h>
#include <math.h>

int main() {
	double x;
	x = pow(-1,.5);
        x = pow(10000,10000);
	printf("define\n");
	exit(0);
}
EOCP

if $cc $ccflags $ldflags -o test_ieee test_ieee.c -lm >/dev/null 2>&1 ; then
    d_ieee=`./test_ieee`
    if test $d_ieee = define ; then
	echo "Great! They can." >&4
    else
   	echo "Nope, they crash and burn." >&4
	d_ieee='undef'
    fi
else
	$cat <<EOM
(I can't seem to get my test program to work. We'll play it safe
 and assume that your math functions don't handle errors nicely.)
EOM
    d_ieee='undef'
fi
$rm -f test_ieee* core

